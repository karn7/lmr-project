import { NextResponse } from "next/server";
import { connectMongoDB } from "../../../../../lib/mongodb";
import Record from "../../../../../models/record";

export async function POST(req) {
  try {
    const { _id, docNumber, createdAt, payType, items, total } = await req.json();

    await connectMongoDB();

    const cleanedItems = items;

    console.log("üì• ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏´‡∏•‡∏±‡∏á parse:");
    console.log("üß™ _id:", _id);
    console.log("üß™ docNumber:", docNumber);
    console.log("üß™ createdAt:", createdAt);
    console.log("üß™ payType:", payType);
    console.log("üß™ total:", total);
    console.log("üß™ items:", cleanedItems);

    const updatedCreatedAt = new Date(createdAt); // client ‡∏™‡πà‡∏á‡∏Ñ‡πà‡∏≤ ISO ‡∏ó‡∏µ‡πà‡∏£‡∏ß‡∏°‡∏ß‡∏±‡∏ô‡πÅ‡∏•‡∏∞‡πÄ‡∏ß‡∏•‡∏≤‡πÉ‡∏´‡∏°‡πà‡∏°‡∏≤‡πÅ‡∏•‡πâ‡∏ß

    const updated = await Record.findByIdAndUpdate(
      _id,
      {
        $set: {
          "docNumber": docNumber,
          "createdAt": updatedCreatedAt,
          "payType": payType,
          "items": items,
          "total": total
        }
      },
      { new: true }
    );
    console.log("‚úÖ MongoDB updated.createdAt:", updated?.createdAt);

    if (!updated) {
      return NextResponse.json({ success: false, message: "‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç" }, { status: 404 });
    }

    console.log("‚úÖ MongoDB updated.createdAt:", updated?.createdAt);
    return NextResponse.json({ success: true, message: "‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß", record: updated });
  } catch (error) {
    console.error("Update error:", error);
    return NextResponse.json({ success: false, message: "‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î", error: error.message }, { status: 500 });
  }
}